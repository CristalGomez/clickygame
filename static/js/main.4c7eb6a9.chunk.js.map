{"version":3,"sources":["components/Navbar/index.js","components/CastCard/index.js","components/Wrapper/index.js","App.js","index.js"],"names":["Component","CastCard","props","react_default","a","createElement","className","alt","name","src","image","Wrapper","children","App","state","score","cast","clickedCast","clicked","event","currentCast","target","_this","indexOf","setState","sort","b","Math","random","alert","concat","_this2","this","components_Wrapper","friends","map","components_CastCard","removecast","id","key","occupation","location","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"opBAGqBA,kBCoBNC,MAnBf,SAAkBC,GACd,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,SAEnCP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,uBADF,IAC0BH,EAAMM,gBCN7BG,MAJf,SAAiBT,GACb,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMU,kBCmE5BC,6MA9DbC,MAAQ,CACNC,MAAO,EACPC,OACAC,YAAa,MAGfC,QAAU,SAAAC,GACR,IAAMC,EAAcD,EAAME,OACNC,EAAKR,MAAMG,YAAYM,QAAQH,IAAgB,GAGjEE,EAAKE,SAAS,CACZR,KAAMM,EAAKR,MAAME,KAAKS,KAAK,SAASrB,EAAEsB,GACpC,MAAO,GAAMC,KAAKC,WAEpBX,YAAa,GACbF,MAAO,IAETc,MAAM,0BAENP,EAAKE,SAAS,CACZR,KAAMM,EAAKR,MAAME,KAAKS,KAAK,SAASrB,EAAEsB,GACpC,MAAO,GAAMC,KAAKC,WAEpBX,YAAaK,EAAKR,MAAMI,QAAQY,OAAOV,GACvCL,MAAOO,EAAKR,MAAMC,MAAQ,GAE5B,WAC2B,KAArBO,EAAKR,MAAMC,QACbc,MAAO,WACPP,EAAKE,SAAS,CACZR,KAAMM,EAAKR,MAAME,KAAKS,KAAK,SAASrB,EAAEsB,GACpC,MAAO,GAAMC,KAAKC,WAEpBX,YAAa,GACbF,MAAO,gFAOT,IAAAgB,EAAAC,KACN,OACE7B,EAAAC,EAAAC,cAAC4B,EAAD,KACCD,KAAKlB,MAAMoB,QAAQC,IAAI,SAAAnB,GAAI,OAC1Bb,EAAAC,EAAAC,cAAC+B,EAAD,CACEC,WAAYN,EAAKM,WACjBC,GAAItB,EAAKsB,GACTC,IAAKvB,EAAKsB,GACV9B,KAAMQ,EAAKR,KACXE,MAAOM,EAAKN,MACZ8B,WAAYxB,EAAKwB,WACjBC,SAAUzB,EAAKyB,qBAtDPzC,aCFlB0C,IAASC,OAAOxC,EAAAC,EAAAC,cAACuC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.4c7eb6a9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./style.css\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-default navbar-fixed-top\">\n      <p className=\"title\"> Greys Anatomy Memory Game</p>\n      <p className=\"score\">Score: {this.props.score}</p>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;","import React from \"react\";\nimport \"./style.css\";\n\n\nfunction CastCard(props){\n    return (\n        <div className=\"card\">\n        <div className=\"img-container\">\n          <img alt={props.name} src={props.image} />\n        </div>\n        <div className=\"content\">\n          <ul>\n            <li>\n              <strong>Name:</strong> {props.name}\n            </li>\n          </ul>\n        </div>\n\n      </div>\n    )\n}\n\n\nexport default CastCard;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props){\n    return <div className=\"wrapper\">{props.children}</div>\n}\n\nexport default Wrapper;","import React, { Component } from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar\";\nimport CastCard from \"./components/CastCard\";\nimport Wrapper from \"./components/Wrapper\"\nimport cast from \"./cast.json\";\n\n\nclass App extends Component {\n  state = {\n    score: 0,\n    cast,\n    clickedCast: []\n  };\n\n  clicked = event => {\n    const currentCast = event.target;\n    const castClicked = this.state.clickedCast.indexOf(currentCast) > -1;\n\n    if (castClicked){\n      this.setState({\n        cast: this.state.cast.sort(function(a,b){\n          return 0.5 - Math.random();\n        }),\n        clickedCast: [],\n        score: 0\n      });\n      alert(\"You lost. Play again?\")\n    } else {\n      this.setState({\n        cast: this.state.cast.sort(function(a,b){\n          return 0.5 - Math.random();\n        }),\n        clickedCast: this.state.clicked.concat(currentCast),\n        score: this.state.score + 1\n      },\n      () => {\n        if (this.state.score === 12){\n          alert (\"You win\");\n          this.setState({\n            cast: this.state.cast.sort(function(a,b){\n              return 0.5 - Math.random()\n            }),\n            clickedCast: [],\n            score: 0\n          })\n        }\n      })\n    }\n  };\n\n  render(){\n    return (\n      <Wrapper>\n      {this.state.friends.map(cast => (\n        <CastCard\n          removecast={this.removecast}\n          id={cast.id}\n          key={cast.id}\n          name={cast.name}\n          image={cast.image}\n          occupation={cast.occupation}\n          location={cast.location}\n        />\n      ))}\n    </Wrapper>\n    )\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}